{"version":3,"sources":["config.js","App.js","reportWebVitals.js","nft.js","navbar.js","index.js"],"names":["NFTCONTRACT","STAKINGCONTRACT","moralisapi","nftpng","createAlchemyWeb3","account","contract","vaultcontract","web3","gasOptions","gasPrice","gasLimit","web3Modal","Web3Modal","network","theme","cacheProvider","providerOptions","App","state","balance","rawearn","this","setState","show","nftamount","outvalue","target","value","ReactGA","initialize","pageview","window","location","pathname","search","axios","get","then","outputa","data","console","log","config","headers","outputb","result","nftdata","connectwallet","delay","delayedLog","processArray","rwdArray","item","sum","reduce","a","b","formatsum","Number","toFixed","document","getElementById","textContent","Promise","resolve","setTimeout","connect","provider","Web3","request","method","eth","requestAccounts","accounts","Contract","ABI","VAULTABI","methods","tokensOfOwner","call","getstakednfts","balanceOf","getbalance","arraynft","Array","from","map","tokenid","filter","forEach","id","earningInfo","array","earned","toPrecision","split","earnedrwd","utils","fromWei","rewardx","numrwd","push","setApprovalForAll","send","rawnfts","className","type","onClick","style","backgroundColor","fontWeight","color","fontFamily","fontSize","textShadow","htmlFor","borderRadius","Button","boxShadow","paddingTop","border","background","paddingBottom","src","width","height","alt","scope","href","rel","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","moralisapikey","sleep","ms","NFT","useState","apicall","getNfts","nftstk","getStk","loadingState","setLoadingState","stakeLoading","setStakeLoading","unstakeLoading","setUnstakeLoading","useEffect","callApi","switchNetwork","chainId","includes","params","msg","getNextNftPage","cursor","on","nftsRes","nfts","numLoop","Math","floor","total","page_size","x","nextPageRes","e","length","all","i","tokenId","token_id","holder","owner_of","wallet","stakednfts","stkid","display","gridColumnEnd","gridTemplateColumns","columnGap","nft","owner","toLowerCase","indexOf","stakeit","stake","marginLeft","unstake","position","top","Container","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","Collapse","Nav","Link","active","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.7f5e2d15.chunk.js","sourcesContent":["import { createAlchemyWeb3 } from '@alch/alchemy-web3';\nexport const NFTCONTRACT = \"0xA690c89558a39709e1F0DdE0f8825a83d438fcE4\";\nexport const STAKINGCONTRACT = \"0x7f6059DdF112CBD103c7F2Fd2ed0F0adb2E2AE8c\";\nexport const polygonscanapi = \"https://api.polygonscan.com/api\";\nexport const moralisapi = \"https://deep-index.moralis.io/api/v2\";\n// export const nftpng = \"https://ipfs.io/ipfs/QmZnG7o3UTe35xq3ffJMtApKXnY2d2Ccxwjxny3HPvop1S/\";\nexport const nftpng = \"/ipfs/\";\nexport const Web3Alc = createAlchemyWeb3(\"https://polygon-mainnet.g.alchemy.com/v2/es1OESDzahjFzl7I2jMj9F24Ea3vMo3u\");","import './App.css';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ABI from './ABI.json';\nimport VAULTABI from './VAULTABI.json';\nimport { NFTCONTRACT, STAKINGCONTRACT, polygonscanapi, moralisapi } from './config';\nimport Web3Modal from \"web3modal\";\nimport Web3 from \"web3\";\nimport ReactGA from 'react-ga';\n\nvar account = null;\nvar contract = null;\nvar vaultcontract = null;\nvar web3 = null;\nconst gasOptions = { gasPrice: 75000000000, gasLimit: 500000 };\n\nconst moralisapikey = \"JwcyI3kFcZIx9M9Psom0b0d2ahdb9VxmSs80MnYU43bbwX803Jufh0XzqYKbXzyg\";\nconst polygonscanapikey = \"JAR6HQQDTVZ3UQIHCUFHJ7MV2M5E6V2FFE\";\n\nconst providerOptions = {\n};\n\n\nconst web3Modal = new Web3Modal({\n    network: \"mainnet\",\n    theme: \"dark\",\n    cacheProvider: false,\n    providerOptions\n});\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            balance: [],\n            rawearn: [],\n        };\n    }\n\n    handleModal() {\n        this.setState({ show: !this.state.show })\n    }\n\n    handleNFT(nftamount) {\n        this.setState({ outvalue: nftamount.target.value });\n    }\n\n    async componentDidMount() {\n\n      ReactGA.initialize('UA-236874074-1');\n      ReactGA.pageview(window.location.pathname + window.location.search);\n\n        await axios.get((polygonscanapi + `?module=stats&action=tokensupply&contractaddress=${NFTCONTRACT}&apikey=${polygonscanapikey}`))\n            .then(outputa => {\n                this.setState({\n                    balance: outputa.data\n                })\n                console.log(outputa.data)\n            })\n        let config = { 'X-API-Key': moralisapikey, 'accept': 'application/json' };\n        await axios.get((moralisapi + `/nft/${NFTCONTRACT}/owners?chain=polygon&format=decimal`), { headers: config })\n            .then(outputb => {\n                const { result } = outputb.data\n                this.setState({\n                    nftdata: result\n                })\n                console.log(outputb.data)\n            })\n    }\n\n    render() {\n        async function connectwallet() {\n            var provider = await web3Modal.connect();\n            web3 = new Web3(provider);\n            await provider.request({ method: 'eth_requestAccounts' });\n            var accounts = await web3.eth.requestAccounts();\n            account = accounts[0];\n            document.getElementById('wallet-address').textContent = account;\n            contract = new web3.eth.Contract(ABI, NFTCONTRACT);\n            vaultcontract = new web3.eth.Contract(VAULTABI, STAKINGCONTRACT);\n            var getstakednfts = await vaultcontract.methods.tokensOfOwner(account).call();\n            document.getElementById('yournfts').textContent = getstakednfts;\n            var getbalance = Number(await vaultcontract.methods.balanceOf(account).call());\n            document.getElementById('stakedbalance').textContent = getbalance;\n            const arraynft = Array.from(getstakednfts.map(Number));\n            const tokenid = arraynft.filter(Number);\n            var rwdArray = [];\n            tokenid.forEach(async (id) => {\n                var rawearn = await vaultcontract.methods.earningInfo(account, [id]).call();\n                var array = Array.from(rawearn.map(Number));\n                console.log(array);\n                array.forEach(async (item) => {\n                    var earned = item.toPrecision(22).split('.')[0]\n                    var earnedrwd = Web3.utils.fromWei(earned);\n                    var rewardx = Number(earnedrwd).toFixed(2);\n                    var numrwd = Number(rewardx);\n                    console.log(numrwd);\n                    rwdArray.push(numrwd);\n                });\n            });\n            function delay() {\n                return new Promise(resolve => setTimeout(resolve, 300));\n            }\n            async function delayedLog(item) {\n                await delay();\n                var sum = item.reduce((a, b) => a + b, 0);\n                var formatsum = Number(sum).toFixed(2);\n                document.getElementById('earned').textContent = formatsum;\n            }\n            async function processArray(rwdArray) {\n                for (const item of rwdArray) {\n                    await delayedLog(item);\n                }\n            }\n            return processArray([rwdArray]);\n        }\n\n        async function enable() {\n            contract.methods.setApprovalForAll(STAKINGCONTRACT, true).send({ from: account, ...gasOptions });\n        }\n        async function rewardinfo() {\n            var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\n            const arraynft = Array.from(rawnfts.map(Number));\n            const tokenid = arraynft.filter(Number);\n            var rwdArray = [];\n            tokenid.forEach(async (id) => {\n                var rawearn = await vaultcontract.methods.earningInfo(account, [id]).call();\n                var array = Array.from(rawearn.map(Number));\n                array.forEach(async (item) => {\n                    var earned = item.toPrecision(22).split('.')[0];\n                    var earnedrwd = Web3.utils.fromWei(earned);\n                    var rewardx = Number(earnedrwd).toFixed(2);\n                    var numrwd = Number(rewardx);\n                    rwdArray.push(numrwd)\n                });\n            });\n            function delay() {\n                return new Promise(resolve => setTimeout(resolve, 300));\n            }\n            async function delayedLog(item) {\n                await delay();\n                var sum = item.reduce((a, b) => a + b, 0);\n                var formatsum = Number(sum).toFixed(2);\n                document.getElementById('earned').textContent = formatsum;\n            }\n            async function processArray(rwdArray) {\n                for (const item of rwdArray) {\n                    await delayedLog(item);\n                }\n            }\n            return processArray([rwdArray]);\n        }\n        return (\n            <div className=\"container py-2 bg-black\">\n                <div className=\"App nftapp bg-black\">\n                    <div className=\"container\">\n                        <input id=\"connectbtn\" type=\"button\" className=\"connectbutton\" onClick={connectwallet} style={{ backgroundColor: \"#26A7DF\", className: \"nav-item d-flex align-content-center flex-wrap\" }} value=\"Connect Your Wallet\" />\n                    </div>\n                    <div className='container, bg-black'>\n                        <div className='col, py-4'>\n                            <div className=''>\n                                <div>\n                                    <div className=\"row\">\n                                        <div>\n                                            <h1 className=\"pt-3\" style={{ fontWeight: \"30\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}>MetaBadge Staking Platform</h1>\n                                        </div>\n                                        <h6 style={{ fontWeight: \"300\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\"}}>Your Wallet Address</h6>\n                                        <div className=\"pb-1\" id='wallet-address' style={{\n                                          fontSize: \"15px\",\n                                            color: \"#4ac0e7\",\n                                            fontWeight: \"300\",\n                                            textShadow: \"1px 1px 1px black\",\n                                        }}>\n                                            <label type=\"button\" onClick={connectwallet} htmlFor=\"floatingInput\">Please Connect Your Wallet</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col bg-black'>\n                        <div className='nftstaker border-0 bg-black'>\n                            <div style={{ fontFamily: \"Avenir LT Std\" }} >\n                                <h2 className=\"pt-2\" style={{ fontFamily: \"Avenir LT Std\", borderRadius: '14px', fontWeight: \"400\", color: \"#ffffff\", fontSize: \"25px\" }} id=\"Vault\">MetaBadge Staking Vault </h2>\n                                <h6 style={{ fontWeight: \"300\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}>First time staking?</h6>\n                                <Button className=\"btn\" onClick={enable}\n                                style={{ backgroundColor: \"#26A7DF\", boxShadow: \"1px 1px 5px #4ac0e7\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}\n                                >Authorize Your Wallet</Button>\n                                <div className=\"row mt-5 px-3 pt-1\">\n                                    <div className=\"col-sm-4 col-center-block\">\n                                        <div className=\"stakingrewards\" style={{ borderRadius: \"25px\", boxShadow: \"1px 1px 15px #4ac0e7\" }}>\n                                            <h5 style={{ color: \"#FFFFFF\", fontSize: \"15px\", fontWeight: '300', paddingTop: 15 }}>OSIS Vault</h5>\n                                            <table className='table mb-5 px-3 table-dark wrap-nft'>\n                                                <tbody>\n                                                    <tr>\n                                                        <td style={{ fontSize: \"0px\", border: \"transparent\", background: 'transparent', paddingTop: 0, paddingBottom: 0 }}>\n                                                            <span style={{ backgroundColor: \"#ffffff00\", fontSize: \"0px\", color: \"#D53790\", fontWeight: \"0\", textShadow: \"1px 1px 2px #000000\" }} id='yournfts'></span>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td style={{ fontSize: \"19px\", border: \"transparent\", background: 'transparent', paddingTop: 1, paddingBottom: 1 }}>Total Staked NFTs:<br></br>\n                                                            <span style={{ backgroundColor: \"#ffffff00\", fontSize: \"21px\", color: \"#D53790\", fontWeight: \"500\", textShadow: \"1px 1px 2px #000000\" }} id='stakedbalance'>Total Staked</span>\n                                                        </td>\n                                                    </tr>\n                                                    {/* <tr> */}\n                                                        {/* <td style={{ fontSize: \"19px\", background: 'transparent' }}> */}\n                                                            {/* <Button onClick={unstakeall}\n                                                            style={{ backgroundColor: \"#D53790\", boxShadow: \"1px 1px 5px #4ac0e7\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\"  }}className='mb-4'\n                                                            >Unstake All</Button> */}\n                                                        {/* </td> */}\n                                                    {/* </tr> */}\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                    <img className=\"img-fluid col-sm-2 col-center-block mb-5\" src=\"metabadges.png\" width=\"\" height=\"\" alt=\"Responsive\" />\n                                    <div className=\"col-sm-4 col-center-block\">\n                                        <div className='stakingrewards' style={{ borderRadius: \"25px\", boxShadow: \"1px 1px 15px #4ac0e7\", fontFamily: \"Avenir LT Std\" }}>\n                                            <h5 style={{ color: \"#FFFFFF\", fontSize: \"15px\", fontWeight: '300', paddingTop: 15 }}>Unstake to Claim Rewards</h5>\n                                            <div style={{ border: \"transparent\", background: \"transparent\" }} >Refresh OSIS Rewards\n                                                <button style={{ border: \"none\", background: \"transparent\" }} >\n                                                    <img src=\"refresh.png\" width=\"\" height=\"15\" background=\"transparent\" border=\"transparent\" alt=\"\" onClick={rewardinfo} />\n                                                </button>\n                                            </div>\n                                            <div id='earned' style={{ color: \"#D53790\", fontSize: '21px', fontWeight: '500', textShadow: \"1px 1px 2px #000000\" }}><p >Earned Tokens</p>\n                                            </div>\n                                            <div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row px-4 pt-2\">\n                                    <div className=\"header\">\n                                        <div className='col bg-black'></div>\n                                        <div style={{ fontSize: '25px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Pool Active Rewards</div>\n                                        <h1>\n                                        </h1>\n                                        <table style={{ boxShadow: \"1px 1px 15px #4ac0e7\" }} className='table px-3 table-bordered table-dark' >\n                                            <thead className='thead-light'>\n                                                <tr>\n                                                    <th scope=\"col\">Collection</th>\n                                                    <th scope=\"col\">Rewards Per Day</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr>\n                                                    <td>Standard MetaBadge</td>\n                                                    <td className=\"amount\" data-test-id=\"rewards-summary-ads\">\n                                                        <span className=\"amount\">1</span>&nbsp;<span className=\"currency\">OSIS</span>\n                                                    </td>\n                                                </tr>\n                                                <tr className='stakegoldeffect'>\n                                                    <td>Rare / Super Rare MetaBadge</td>\n                                                    <td className=\"amount \" data-test-id=\"rewards-summary-ac\">\n                                                        <span className=\"amount\">2</span>&nbsp;<span className=\"currency\">OSIS</span>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                        <a href=\"/OSIS_Rewards.pdf\" target=\"_blank\" rel=\"noreferrer\"\n                                            className=\"'mb-3 mt-3 bg-black'\"\n                                            style={{ backgroundColor: \"#000000\", boxShadow: \"0px 0px 0px #4ac0e7\", fontWeight: \"300\", fontSize: '20px', color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}>\n                                            OSIS Rewards List\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col mt-3 bg-black' id=\"NFT\">\n                        <div className='col bg-black'>\n                            <h1 className=' mb-3 mt-5 bg-black'>MetaBadge Portal</h1>\n                            <div className='col mt-3 ml-3 bg-black'>\n                                <img src=\"polygon.png\" width={'15%'} height=\"\" alt=\"\" ></img>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './App.css';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport VAULTABI from './VAULTABI.json';\nimport { NFTCONTRACT, STAKINGCONTRACT, moralisapi, nftpng } from './config';\nimport Web3Modal from \"web3modal\";\nimport Web3 from \"web3\";\n\nvar web3 = null;\nvar account = null;\nvar vaultcontract = null;\nvar provider = null;\nconst gasOptions = { gasPrice: 75000000000, gasLimit: 500000 };\n\nconst moralisapikey = \"JwcyI3kFcZIx9M9Psom0b0d2ahdb9VxmSs80MnYU43bbwX803Jufh0XzqYKbXzyg\";\nconst providerOptions = {\n};\n\nconst web3Modal = new Web3Modal({\n    network: \"mainnet\",\n    theme: \"dark\",\n    cacheProvider: false,\n    providerOptions\n});\n\nfunction sleep(ms) { return new Promise((resolve) => setTimeout(resolve, ms)); }\n\nexport default function NFT() {\n    const [apicall, getNfts] = useState([])\n    const [nftstk, getStk] = useState([])\n    const [loadingState, setLoadingState] = useState('not-loaded')\n    const [stakeLoading, setStakeLoading] = useState({});\n    const [unstakeLoading, setUnstakeLoading] = useState({});\n\n    useEffect(() => {callApi()}, []);\n\n    const switchNetwork = async (chainId) => {\n        if (![137, '0x89', '137'].includes(chainId)) {\n            try {\n                await provider.request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [{ chainId: '0x89' }],\n                });\n                await callApi();\n                return { msg: 'Change Network Successfull' };\n            } catch (e) {\n                console.log('error switchNetwork', e);\n            }\n        }\n    }\n\n    async function getNextNftPage(cursor) {\n        let config = { 'X-API-Key': moralisapikey, 'accept': 'application/json' };\n        return await axios.get((moralisapi + `/nft/${NFTCONTRACT}/owners?chain=polygon&format=decimal&limit=100&cursor=${cursor}`), { headers: config });\n    }\n\n    async function callApi() {\n        provider = await web3Modal.connect();\n        provider.on('chainChanged', switchNetwork);\n        web3 = new Web3(provider);\n        await provider.request({ method: 'eth_requestAccounts' });\n        var accounts = await web3.eth.requestAccounts();\n        account = accounts[0];\n        switchNetwork(provider.chainId);\n        vaultcontract = new web3.eth.Contract(VAULTABI, STAKINGCONTRACT)\n        let config = { 'X-API-Key': moralisapikey, 'accept': 'application/json' };\n        const nftsRes = await axios.get((moralisapi + `/nft/${NFTCONTRACT}/owners?chain=polygon&format=decimal&limit=100`), { headers: config });\n\n        const nfts = nftsRes.data.result;\n        console.log(\"nfts res: \", nfts);\n\n        let cursor = nftsRes.data.cursor;\n        const numLoop = Math.floor(nftsRes.data.total / nftsRes.data.page_size);\n        console.log(\"num loop: \", numLoop);\n        for (let x = 0; x < numLoop - 1; x++) {\n            await sleep(75);\n            const nextPageRes = await getNextNftPage(cursor);\n            await sleep(75);\n            console.log(`Page[${x}]: `,);\n            await sleep(75);\n            cursor = nextPageRes.data.cursor;\n            await sleep(75);\n            // nfts.concat(nextPageRes.data.result);\n            nextPageRes.data.result.forEach((e) => {\n                nfts.push(e);\n            });\n        }\n\n        console.log(\"all 10000, nft: \", nfts.length);\n\n        const apicall = await Promise.all(nfts.map(async i => {\n            let item = {\n                tokenId: i.token_id,\n                holder: i.owner_of,\n                wallet: account,\n            }\n            return item\n        }))\n        const stakednfts = await vaultcontract.methods.tokensOfOwner(account).call()\n            .then(id => {\n                return id;\n            })\n        const nftstk = await Promise.all(stakednfts.map(async i => {\n            let stkid = {\n                tokenId: i,\n            }\n            return stkid\n        }))\n        getNfts(apicall)\n        getStk(nftstk)\n        console.log(apicall);\n        console.log(nftstk)\n        setLoadingState('loaded')\n    }\n    console.log('check', { loadingState, apicall, nftstk });\n    if (loadingState === 'loaded' && !apicall.length) {\n        return (<h1 className=\"text-3xl\">Wallet Not Connected</h1>)\n    }\n\n    console.log({ stakeLoading, unstakeLoading })\n\n    return (\n        <div className='container mb-4 bg-black'>\n            <div className=\"container nftportal bg-black\">\n                    <div className=\"mb-3 mt-3 bg-black\">\n                        <div className=\"row items px-5 pt-1\">\n                            <h3 className=\"center progress-title\">Manifesting...</h3>\n                            <div className=\"progress progress-striped\">\n                                <div className=\"nftportal progress-bar\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row items px-5 pt-1\">\n                    <div className=\"ml-3 mr-3 bg-black\" style={{ display: \"inline-grid\", gridColumnEnd: \"auto\", gridTemplateColumns: \"repeat(auto-fill, minmax(200px, 1fr))\", columnGap: \"10px\" }}>\n                        {apicall.map((nft, i) => {\n                            const owner = nft.wallet.toLowerCase();\n                            const holder = nft.holder.toLowerCase();\n                            if (owner.indexOf(holder) !== -1) {\n                                async function stakeit() {\n                                    setStakeLoading({ [i]: true });\n                                    await vaultcontract.methods.stake([nft.tokenId]).send({ from: account, ...gasOptions });\n                                    setTimeout(async () => {\n                                        await callApi();\n                                        setStakeLoading({ [i]: false });\n                                    }, 22000);\n                                }\n                                return (\n                                    <div className=\"card nft-card mt-3 mb-3\" key={i} >\n                                        <div className=\"image-over\">\n                                            <img className=\"card-img-top\" src={nftpng + nft.tokenId + '.png'} alt=\"\" />\n                                        </div>\n                                        <div className=\"card-caption col-12 p-0\">\n                                            <div className=\"card-body\">\n                                                <h5 className=\"mb-0\">OSIS MetaBadges<br></br> #{nft.tokenId}</h5>\n                                                <h5 className=\"mb-0 mt-2\">Status<p style={{ color: \"#6db647\", fontWeight: \"bold\", textShadow: \"1px 1px 2px #000000\" }}>Ready to Stake</p></h5>\n                                                <div className=\"card-bottom d-flex justify-content-between\">\n                                                    <input key={i} type=\"hidden\" id='stakeid' value={nft.tokenId} />\n                                                    <Button style={{ marginLeft: '2px', backgroundColor: \"#ffffff10\" }} onClick={stakeit}>{stakeLoading[i] ? 'Staking...' : 'Stake it'}</Button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        })}\n                        {nftstk.map((nft, i) => {\n                            async function unstakeit() {\n                                setUnstakeLoading({ [i]: true });\n                                vaultcontract.methods.unstake([nft.tokenId]).send({ from: account, ...gasOptions });\n                                setTimeout(async () => {\n                                    await callApi();\n                                    setUnstakeLoading({ [i]: false });\n                                }, 22000);\n                            }\n                            return (\n                                <div key={i}>\n                                    <div className=\"card stakedcard mt-3 mb-3\" >\n                                        <div className=\"image-over\">\n                                            <img style={{ position: 'absolute', top: '0.05rem', width: '50px' }} src='metabadges.png' width=\"\" height=\"\" alt=\"\" ></img>\n                                            <img className=\"card-img-top\" src={nftpng + nft.tokenId + '.png'} alt=\"\" />\n                                        </div>\n                                        <div className=\"card-caption col-12 p-0\">\n                                            <div className=\"card-body\">\n                                                <h5 className=\"mb-0\">OSIS MetaBadges<br></br> #{nft.tokenId}</h5>\n                                                <h5 className=\"mb-0 mt-2\">Status<p style={{ color: \"#15F4EE\", fontWeight: \"bold\", textShadow: \"1px 1px 2px #000000\" }}>Currently Staked</p></h5>\n                                                <div className=\"card-bottom d-flex justify-content-between\">\n                                                    <input type=\"hidden\" id='stakeid' value={nft.tokenId} />\n                                                    <Button style={{ marginLeft: '2px', backgroundColor: \"#ffffff10\" }} onClick={unstakeit}>{unstakeLoading[i] ? 'Unstaking...' : 'Unstake it'}</Button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport \"./App.css\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport Container from 'react-bootstrap/Container';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default function App() {\n  return (\n    <Container>\n    <Navbar collapseOnSelect expand=\"sm\" bg=\"black\" variant=\"dark\">\n      <Navbar.Brand href=\".\">\n      <img src=\"apotheosis.png\" width=\"\" height=\"38\" alt=\"\"></img>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ms-auto navbarfont navbar-header\">\n          <Nav.Link active href=\".\">DASHBOARD</Nav.Link>\n          <Nav.Link active href=\"#Vault\">VAULT</Nav.Link>\n          <Nav.Link active href=\"#NFTs\">NFTs</Nav.Link>\n          <Nav.Link active href=\"https://osis.world\" target=\"_blank\" rel=\"noreferrer\">OSIS.WORLD</Nav.Link>\n          <Nav.Link active href=\"https://osis.world/login\" target=\"_blank\" rel=\"noreferrer\">GET OSIS</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Routes, Route } from \"react-router-dom\";\nimport Nft from './nft';\nimport Navbar from './navbar';\n\n<Routes>\n<Route path=\"/nft\" element={<Nft />} />\n</Routes>\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n  <React.StrictMode>\n    <Navbar />\n    <App />\n    <Nft />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}